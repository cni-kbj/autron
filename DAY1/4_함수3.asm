; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30040.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?add1@@YAHHH@Z					; add1
PUBLIC	main
pdata	SEGMENT
$pdata$main DD	imagerel $LN5
	DD	imagerel $LN5+42
	DD	imagerel $unwind$main
pdata	ENDS
xdata	SEGMENT
$unwind$main DD	010401H
	DD	06204H
xdata	ENDS
; Function compile flags: /Odtp
; File B:\[ C++ 수업소스 ]\CPPBASIC\오트론\DAY1\DAY1\4_함수3.cpp
_TEXT	SEGMENT
n1$ = 32
n2$ = 36
main	PROC

; 10   : {

$LN5:
	sub	rsp, 56					; 00000038H

; 11   : 	int n1 = add1(1, 2);  

	mov	edx, 2
	mov	ecx, 1
	call	?add1@@YAHHH@Z				; add1
	mov	DWORD PTR n1$[rsp], eax

; 7    : inline int add2(int a, int b) { return a + b; }

	mov	eax, 1
	add	eax, 2

; 12   : 	int n2 = add2(1, 2);  

	mov	DWORD PTR n2$[rsp], eax

; 13   : }

	xor	eax, eax
	add	rsp, 56					; 00000038H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File B:\[ C++ 수업소스 ]\CPPBASIC\오트론\DAY1\DAY1\4_함수3.cpp
_TEXT	SEGMENT
a$ = 8
b$ = 16
?add1@@YAHHH@Z PROC					; add1

; 6    :        int add1(int a, int b) { return a + b; }

	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	mov	eax, DWORD PTR b$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	add	ecx, eax
	mov	eax, ecx
	ret	0
?add1@@YAHHH@Z ENDP					; add1
_TEXT	ENDS
END
