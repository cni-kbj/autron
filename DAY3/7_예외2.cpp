// 객체지향 언어의 "실패 전달" : "예외"문법 사용 
#include <iostream >

// 1. 호출자가 던져진 예외를 처리하지 않으면 프로세스 종료
//    ==> 반드시 던져진 예외를 처리해야 한다.

// 2. 반환값과 실패의 전달이 완전히 분리된다. 
//    ==> 반환값이 모호하지 않다.!(-1 등을 실패라고 약속할 필요 없다는 것)

int foo()
{
	if (1)		// 실패 했다고 가정.
		throw 1;// 실패시 예외를 던진다.
				// 처리하지 않으면 프로세스는 종료 된다.

	return 0;
}

int main()
{
	int ret = foo();

	std::cout << "continue main" << std::endl;
}